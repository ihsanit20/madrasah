<?php

namespace {{ namespace }};

use {{ rootNamespace }}Http\Controllers\Controller;
use App\Http\Resources\{{ model }}Resource;
use {{ namespacedModel }};
use Illuminate\Http\Request;
use Inertia\Inertia;

class {{ class }} extends Controller
{
    public function index()
    {
        ${{ table }} = {{ model }}::query();

        return Inertia::render('{{ model }}/Index', [
            'data' => [
                'collections'   => {{ model }}Resource::collection($collections->paginate()->appends(request()->input())),
                'filters'       => $this->getFilterProperty(),
            ]
        ]);
    }

    public function create()
    {
        return Inertia::render('{{ model }}/Create', [
            'data' => $this->data(new {{ model }}())
        ]);
    }

    public function store(Request $request)
    {
        ${{ modelVariable }} = {{ model }}::create($this->validatedData($request));

        return redirect()
            ->route('collections.show', ${{ modelVariable }}->id)
            ->with('status', 'The record has been added successfully.');
    }

    public function show({{ model }} ${{ modelVariable }})
    {
        return Inertia::render('{{ model }}/Show', [
            'data' => [
                '{{ modelVariable }}' => $this->formatedData(${{ modelVariable }})
            ]
        ]);
    }

    public function edit({{ model }} ${{ modelVariable }})
    {
        return Inertia::render('{{ model }}/Edit', [
            'data' => $this->data(${{ modelVariable }})
        ]);
    }

    public function update(Request $request, {{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->update($this->validatedData($request, ${{ modelVariable }}->id));

        return redirect()
            ->route('collections.show', ${{ modelVariable }}->id)
            ->with('status', 'The record has been update successfully.');
    }

    public function destroy({{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();

        return redirect()
            ->route('collections.index')
            ->with('status', 'The record has been delete successfully.');
    }

    protected function data(${{ modelVariable }})
    {
        return [
            '{{ modelVariable }}' => $this->formatedData(${{ modelVariable }}),
        ];
    }

    protected function formatedData(${{ modelVariable }})
    {
        {{ model }}Resource::withoutWrapping();

        return new {{ model }}Resource(${{ modelVariable }});
    }

    protected function getFilterProperty()
    {
        return [
            //
        ];
    }

    protected function validatedData($request, $id = '')
    {
        return $request->validate([
            //
        ]);
    }

}